Description: 'Effective DevOps in AWS: HelloWorld web application'
Outputs:
  InstancePublicIp:
    Description: Public IP of our instance.
    Value: !GetAtt 'instance.PublicIp'
  WebUrl:
    Description: Application endpoint
    Value: !Join
      - ''
      - - http://
        - !GetAtt 'instance.PublicDnsName'
        - ':'
        - '8080'
Parameters:
  KeyPair:
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
    Description: Name of an existing EC2 KeyPair to SSH
    Type: AWS::EC2::KeyPair::KeyName
Resources:
  InstanceProfile:
    Properties:
      Path: /
      Roles:
        - !Ref 'Role'
    Type: AWS::IAM::InstanceProfile
  Role:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
      Description: Role for add SSM capabilities to Jenkins instance
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
    Type: AWS::IAM::Role
  SecurityGroup:
    Properties:
      GroupDescription: Allow SSH and TCP/8080 access
      SecurityGroupIngress:
        - CidrIp: '0.0.0.0/0'
          FromPort: '22'
          IpProtocol: tcp
          ToPort: '22'
        - CidrIp: '0.0.0.0/0'
          FromPort: '8080'
          IpProtocol: tcp
          ToPort: '8080'
    Type: AWS::EC2::SecurityGroup
  instance:
    Properties:
      IamInstanceProfile: !Ref 'InstanceProfile'
      ImageId: ami-0c2b8ca1dad447f8a
      InstanceType: t2.micro
      KeyName: !Ref 'KeyPair'
      SecurityGroups:
        - !Ref 'SecurityGroup'
      UserData: !Base64
        Fn::Join:
          - "\n"
          - - '#!/bin/bash'
            - sudo systemctl enable amazon-ssm-agent
            - sudo systemctl start amazon-ssm-agent
            - yum install -y git
            - sudo amazon-linux-extras install -y ansible2
            - /usr/bin/ansible-pull -U https://github.com/jarmandomtz/ansible-pull-gitrepo
              jenkins.yml -C develop -i localhost -v --sleep 60 >> /tmp/ansible-pull.log
            - >-
              echo '*/2 * * * * /usr/bin/ansible-pull -U https://github.com/jarmandomtz/ansible-pull-gitrepo
              jenkins.yml -C develop -i localhost -v --sleep 60 >> /tmp/ansible-pull.log'
              > /tmp/ansible-pull-crontab-cmd
            - sudo crontab -u ec2-user /tmp/ansible-pull-crontab-cmd
    Type: AWS::EC2::Instance

